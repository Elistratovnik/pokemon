{"version":3,"sources":["components/About/About.js","components/Card/Card.js","components/Welcome/Welcome.js","redux/actions.js","redux/types.js","components/CardsList/CardsList.js","components/Pokemon/Pokemon.js","components/Table/Table.js","components/PokemonsTable/PokemonsTable.js","components/Main/Main.js","components/Menu/Menu.js","components/Spinner/Spinner.js","App.js","serviceWorker.js","redux/reducers/appReducer.js","redux/reducers/cardsReducer.js","redux/reducers/tableReducer.js","redux/rootReducer.js","index.js"],"names":["About","contacts","type","contact","contactTrail","useTrail","length","to","opacity","bottom","from","config","molasses","className","map","props","index","div","style","key","Card","pokemon","name","url","useState","img","setImage","id","setId","useEffect","a","fetch","response","json","sprites","front_default","fetchData","backgroundImage","Welcome","LoadNextCards","dispath","useDispatch","welcomeTextEffect","useSpring","transform","wobbly","onClick","CardsList","dispatch","cardsRef","useRef","offsetRef","useSelector","state","pokemons","cards","loading","greetingsOpen","app","pokemonAddCount","current","getBoundingClientRect","height","window","innerHeight","addEventListener","handleScroll","removeEventListener","limit","offset","payload","alert","top","Math","round","ref","Pokemon","match","params","src","image","alt","weight","Table","allPokemons","table","allPokemonsBackup","width","rowHeight","rowCount","rowRenderer","parent","PokemonsTable","value","searchInput","onChange","e","changeSearchValue","currentTarget","Main","exact","path","component","Menu","open","setOpen","mobile","innerWidth","MenuRotateRef","menuRotate","duration","MenuOpenRef","menuOpen","showMenuItemsRef","showMenuItems","useTransition","title","item","unique","enter","leave","useChain","onMouseEnter","onMouseLeave","Spinner","App","Boolean","location","hostname","initialState","loadedPokemonCards","cardsCount","rootReducer","combineReducers","action","results","count","console","log","other","types","filter","includes","store","createStore","applyMiddleware","thunk","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wcA4CeA,MAxCf,WACE,IAAMC,EAAW,CAAC,CAChBC,KAAM,QACNC,QAAS,2BAEX,CACED,KAAM,QACNC,QAAS,sBAEX,CACED,KAAM,KACNC,QAAS,+BAGLC,EAAeC,YAASJ,EAASK,OAAQ,CAC7CC,GAAI,CAAEC,QAAS,EAAGC,OAAQ,OAC1BC,KAAM,CAAEF,QAAS,EAAGC,OAAQ,SAC5BE,OAAQA,IAAOC,WAGjB,OACE,6BAASC,UAAU,SACjB,wBAAIA,UAAU,gBAAd,qGACA,uBAAGA,UAAU,eAAb,0eAEA,uBAAGA,UAAU,eAAb,gIACA,yBAAKA,UAAU,mBAEXT,EAAaU,KAAI,SAACC,EAAOC,GAAR,OACf,kBAAC,IAASC,IAAV,CAAcC,MAAOH,EAAOI,IAAKH,EAAOH,UAAU,4BAChD,wBAAIA,UAAU,yBAAyBZ,EAASe,GAAOd,MACvD,0BAAMW,UAAU,wBAAwBZ,EAASe,GAAOb,gB,+CCRvDiB,MAvBf,YAA4B,IAAZC,EAAW,EAAXA,QACNC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,IADW,EAEDC,mBAAS,IAFR,mBAElBC,EAFkB,KAEbC,EAFa,OAGLF,mBAAS,GAHJ,mBAGlBG,EAHkB,KAGdC,EAHc,KAezB,OAVAC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEACyBC,MAAMR,GAD/B,cACQS,EADR,gBAEqBA,EAASC,OAF9B,OAEQA,EAFR,OAGEP,EAASO,EAAKC,QAAQC,eACtBP,EAAMK,EAAKN,IAJb,4CADY,uBAAC,WAAD,wBAOZS,KACD,CAACb,IAGF,kBAAC,IAAD,CAAMhB,GAAE,oBAAeoB,GAAMd,UAAU,QACrC,yBAAKA,UAAU,cAAcK,MAAO,CAAEmB,gBAAgB,OAAD,OAASZ,EAAT,QACrD,wBAAIZ,UAAU,eAAeS,K,YCQpBgB,MAxBf,YAAmC,IAAjBC,EAAgB,EAAhBA,cACVC,EAAUC,cAOVC,EAAoBC,YAAU,CAClCjC,KAAM,CAACF,QAAS,EAAGoC,UAAW,qBAC9BrC,GAAI,CAACC,QAAS,EAAIoC,UAAW,kBAC7BjC,OAAQA,IAAOkC,SAGjB,OACE,kBAAC,IAAS5B,IAAV,CAAcJ,UAAU,UAAUK,MAAOwB,GACvC,wBAAI7B,UAAU,kBAAd,gBACA,uBAAGA,UAAU,qBAAb,oeACA,uBAAGA,UAAU,qBAAb,4UACA,4BAAQA,UAAU,kBAAkBiC,QAhBlB,WACpBN,ECsDK,CACLtC,KC7D0B,mBFO1BqC,MAcE,gDGiCSQ,MAnDf,WACE,IAAMC,EAAWP,cACXQ,EAAWC,mBACXC,EAAYD,iBAAO,GAHN,EAI2CE,aAAY,SAACC,GACzE,MAAO,CACLC,SAAUD,EAAME,MAAMD,SACtBE,QAASH,EAAME,MAAMC,QACrBC,cAAeJ,EAAMK,IAAID,cACzBE,gBAAiBN,EAAME,MAAMI,oBALzBL,EAJW,EAIXA,SAAmBG,GAJR,EAIDD,QAJC,EAIQC,eAAeE,EAJvB,EAIuBA,gBAS1C9B,qBAAU,WACJoB,EAASW,QAAQC,wBAAwBC,OAASC,OAAOC,cAAgBP,GAC3ElB,MAED,CAACe,EAAUG,IAEd5B,qBAAU,WAER,OADAkC,OAAOE,iBAAiB,SAAUC,GAC3B,WACLH,OAAOI,oBAAoB,SAAUD,GACrClB,EFwCG,CACL9C,KClEuB,mBC2BtB,IAEH,IAAMqC,EAAgB,WFhCjB,IAAsB6B,EAAOC,EEiChCrB,GFjCyBoB,EEiCHT,EFjCUU,EEiCOlB,EAAUS,QFhCnD,uCAAO,WAAOZ,GAAP,iBAAAlB,EAAA,6DACLkB,EAgDK,CACL9C,KCnDuB,gBDClB,kBAGoB6B,MAAM,2CAAD,OAA4CqC,EAA5C,mBAA4DC,IAHrF,cAGGrC,EAHH,gBAIgBA,EAASC,OAJzB,OAIGA,EAJH,OAKHe,EAAS,CAAE9C,KCRY,gBDQSoE,QAASrC,IALtC,kDAOHsC,MAAM,iJAAD,cAPF,yBASHvB,EA8CG,CACL9C,KCxDuB,gBDAlB,qBAWL8C,EA4CK,CACL9C,KCxDuB,gBDAlB,gEAAP,wDEiCEiD,EAAUS,QAAUT,EAAUS,QAAUD,GAGpCO,EAAe,WAAO,IAAD,EACDjB,EAASW,QAAQC,wBAAjCC,EADiB,EACjBA,OAAQU,EADS,EACTA,IACZC,KAAKC,MAAMZ,KAAYC,OAAOC,YAAcQ,EAAM,IACpDjC,KAIJ,OACE,6BAASoC,IAAK1B,EAAUpC,UAAU,SAC/B4C,GAAiB,kBAAC,EAAD,CAASlB,cAAeA,IAExCe,EAASxC,KAAI,SAACO,EAASL,GAAV,OACX,kBAAC,EAAD,CAAMG,IAAKH,EAAOK,QAASA,S,MCvBtBuD,MAvBf,SAAiB7D,GACf,IAAMiC,EAAWP,cACXpB,EAAU+B,aAAY,SAACC,GAC3B,OAAOA,EAAME,MAAMlC,WAOrB,OAJAQ,qBAAU,WHsBL,IAAqBN,EGrBxByB,GHqBwBzB,EGrBH,qCAAD,OAAsCR,EAAM8D,MAAMC,OAAOnD,IHsB/E,uCAAO,WAAOqB,GAAP,iBAAAlB,EAAA,6DACLkB,EAsDK,CACL9C,KClFyB,kBD4BzB8C,EAgBK,CACL9C,KCnDuB,gBDgClB,SAGkB6B,MAAMR,GAHxB,cAGCS,EAHD,gBAIcA,EAASC,OAJvB,OAICA,EAJD,OAKLe,EAAS,CAAE9C,KChCa,eDgCOoE,QAASrC,IACxCe,EAkBK,CACL9C,KCxDuB,gBD+BlB,4CAAP,0DGrBG,CAACa,EAAM8D,MAAMC,OAAOnD,GAAIqB,IAGzB,6BAASnC,UAAU,WACjB,yBAAKkE,IAAK1D,EAAQ2D,MAAOC,IAAI,iBAAiBpE,UAAU,mBACxD,wBAAIA,UAAU,wBACZ,wBAAIA,UAAU,iBAAd,8BAAuCQ,EAAQC,OAC/C,wBAAIT,UAAU,iBAAd,8BAAuCQ,EAAQ6D,OAA/C,kBACA,wBAAIrE,UAAU,iBAAd,oCAAwCQ,EAAQyC,OAAhD,0CACA,wBAAIjD,UAAU,iBAAd,8BAAuCQ,EAAQnB,U,QCaxCiF,MA7Bf,WACE,IAAM3C,EAAUC,cADD,EAE0BW,aAAY,SAACC,GACpD,MAAO,CACL+B,YAAa/B,EAAMgC,MAAMD,YACzBE,kBAAmBjC,EAAMgC,MAAMC,sBAH5BF,EAFQ,EAERA,YAAaE,EAFL,EAEKA,kBAapB,OANAzD,qBAAU,WACHyD,EAAkBhF,QACrBkC,EJEJ,uCAAO,WAAOQ,GAAP,iBAAAlB,EAAA,6DACLkB,EAgCK,CACL9C,KCnDuB,gBDiBlB,kBAGoB6B,MAAM,yDAH1B,cAGGC,EAHH,gBAIgBA,EAASC,OAJzB,OAIGA,EAJH,OAKHe,EAAS,CAAE9C,KClBmB,uBDkBSoE,QAASrC,IAL7C,kDAOHsC,MAAM,iJAAD,cAPF,yBASHvB,EA8BG,CACL9C,KCxDuB,gBDgBlB,6EAAP,yDIAG,CAACsC,IAGF,yBAAK3B,UAAU,QAAQK,MAAO,CAAEqE,MAAO,OAAQzB,OAAQ,SACrD,kBAAC,IAAD,MACG,gBAAEyB,EAAF,EAAEA,MAAOzB,EAAT,EAASA,OAAT,OACC,kBAAC,IAAD,CAAMyB,MAAOA,EAAOzB,OAAQA,EAAQ0B,UAAW,GAAIC,SAAUL,EAAY9E,OAAQoF,YAAa,YAAoC,IAAjCvE,EAAgC,EAAhCA,IAAKH,EAA2B,EAA3BA,MAAeE,GAAY,EAApByE,OAAoB,EAAZzE,OAC7GG,EAAU+D,EAAYpE,GAC5B,OAAO,kBAAC,IAAD,CAAMT,GAAE,oBAAec,EAAQC,MAAQT,UAAU,aAAaM,IAAKA,EAAKD,MAAOA,GAA/E,UAA0FF,EAAQ,EAAlG,aAAwGK,EAAQC,e,YCGpHsE,MAvBf,WACE,IAAM5C,EAAWP,cACXoD,EAAQzC,aAAY,SAACC,GACzB,OAAOA,EAAMgC,MAAMS,eAWrB,OACE,6BAASjF,UAAU,kBACf,2BAAOA,UAAU,yBAAyBX,KAAK,OAAO2F,MAAOA,EAAOE,SAVpD,SAACC,GACrBhD,EL6DG,SAA2B6C,GAChC,MAAO,CACL3F,KCpE+B,sBDqE/BoE,QAASuB,GKhEAI,CAAkBD,EAAEE,cAAcL,WAUvC,4BAAQhF,UAAU,yBAAyBiC,QAPrB,WAC1BE,ELiEK,CACL9C,KC1E0B,qBIctB,wCACA,kBAAC,EAAD,QCLOiG,MAbf,WACE,OACE,0BAAMtF,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,IAAIC,UAAWvD,IACjC,kBAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,YAAYC,UAAWV,IACzC,kBAAC,IAAD,CAAOS,KAAK,SAASC,UAAWtG,IAChC,kBAAC,IAAD,CAAOqG,KAAK,gBAAgBC,UAAW1B,O,cCsChC2B,MA/Cf,WAAiB,IAAD,EACU/E,oBAAS,GADnB,mBACPgF,EADO,KACDC,EADC,KAERC,EAAS3C,OAAO4C,WAAa,KAAO,OAAS,MAQ7CC,EAAgB1D,mBAChB2D,EAAalE,YAAU,CAC3BgC,IAAKiC,EACLhE,UAAW4D,EAAO,eAAiB,gBACnC9F,KAAM,CAAEkC,UAAW,kBACnBjC,OAAQ,CAAEmG,SAAU,OAGhBC,EAAc7D,mBACd8D,EAAWrE,YAAU,CACzBgC,IAAKoC,EACLxB,MAAOiB,EAAOE,EAAS,OAGnBO,EAAmB/D,mBACnBgE,EAAgBC,YAAcX,EArBlB,CAChB,CAAEY,MAAO,6CAAWf,KAAM,IAAK1E,GAAI,KACnC,CAAEyF,MAAO,mDAAYf,KAAM,YAAa1E,GAAI,KAC5C,CAAEyF,MAAO,iCAASf,KAAM,SAAU1E,GAAI,MAkBe,IAAI,SAAA0F,GAAI,OAAIA,EAAKD,QAAO,CAC7EzC,IAAKsC,EACLK,QAAQ,EACR5G,KAAM,CAAEF,QAAS,EAAGoC,UAAW,YAC/B2E,MAAO,CAAC,CAAE/G,QAAS,EAAGoC,UAAW,YAAc,CAAEpC,QAAS,EAAGoC,UAAW,aACxE4E,MAAO,CAAEhH,QAAS,EAAGoC,UAAW,YAChCjC,OAAQ,CAAEmG,SAAU,OAKtB,OAFAW,YAASjB,EAAO,CAACI,EAAeG,EAAaE,GAAoB,CAACA,EAAkBL,EAAeG,GAAc,CAAC,EAAGP,EAAO,GAAM,KAGhI,kBAAC,IAASvF,IAAV,CAAcC,MAAK,2BAAO2F,GAAeG,GAAYnG,UAAU,OAAO6G,aAAc,WAAQjB,GAAQ,IAASkB,aAAc,WAAQlB,GAAQ,KAEvIS,EAAcpG,KAAI,YAAsB,IAAnBuG,EAAkB,EAAlBA,KAAMtG,EAAY,EAAZA,MACzB,OAAO,kBAAC,IAASE,IAAV,CAAcC,MAAOH,EAAOI,IAAKkG,EAAK1F,IAAI,kBAAC,IAAD,CAASd,UAAU,aAAaN,GAAI8G,EAAKhB,KAAMnF,MAAOH,GAAQsG,EAAKD,a,MClC/GQ,MARf,WACE,OACE,yBAAK/G,UAAU,aCaJgH,MAXf,WACE,IAAMrE,EAAUJ,aAAY,SAAAC,GAAK,OAAIA,EAAMK,IAAIF,WAC/C,OACE,yBAAK3C,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACC2C,GAAW,kBAAC,EAAD,QCDEsE,QACW,cAA7B/D,OAAOgE,SAASC,UAEe,UAA7BjE,OAAOgE,SAASC,UAEhBjE,OAAOgE,SAASC,SAASnD,MACvB,2D,YChBAoD,EAAe,CACnBxE,eAAe,EACfD,SAAS,G,oBCFLyE,EAAe,CACnB3E,SAAU,GACV4E,mBAAoB,GACpBC,WAAY,EACZxE,gBAAiB,EACjBtC,QAAS,CACP2D,MAAO,+GACP1D,KAAM,GACN4D,OAAQ,EACRpB,OAAQ,EACR5D,KAAM,KCTV,IAAM+H,EAAe,CACnB7C,YAAa,GACbE,kBAAmB,GACnBQ,YAAa,ICDR,IAAMsC,EAAcC,YAAgB,CACxC3E,IHCI,WAAmD,IAA/BL,EAA8B,uDAAtB4E,EAAcK,EAAQ,uCACvD,OAAQA,EAAOpI,MACb,IVL0B,iBUMxB,OAAO,2BAAKmD,GAAZ,IAAmBI,eAAe,IACpC,IVTuB,cUUrB,OAAO,2BAAKJ,GAAZ,IAAmBG,SAAS,IAC9B,IVVuB,cUWrB,OAAO,2BAAKH,GAAZ,IAAmBG,SAAS,IAC9B,QACE,OAAOH,IGTVE,MFSI,WAAqD,IAA/BF,EAA8B,uDAAtB4E,EAAcK,EAAQ,uCACzD,OAAQA,EAAOpI,MACb,IXlByB,gBWmBvB,OAAO,2BAAKmD,GAAZ,IAAmBC,SAAS,GAAD,mBAAMD,EAAMC,UAAZ,YAAyBgF,EAAOhE,QAAQiE,UAAUJ,WAAYG,EAAOhE,QAAQkE,QAC1G,IXfuB,cWgBrB,OAAO,2BAAKnF,GAAZ,IAAmBC,SAAU,KAC/B,IXfwB,eWiBtB,OADAmF,QAAQC,IAAIJ,EAAOhE,SACZ,2BAAKjB,GAAZ,IAAmBhC,QAAS,CAC1B2D,MAAOsD,EAAOhE,QAAQpC,QAAQyG,MAAM,oBAAoBxG,cACxDb,KAAMgH,EAAOhE,QAAQhD,KACrB4D,OAAQoD,EAAOhE,QAAQY,OACvBpB,OAAQwE,EAAOhE,QAAQR,OACvB5D,KAAMoI,EAAOhE,QAAQsE,MAAM,GAAG1I,KAAKoB,QACvC,IXtByB,gBWuBvB,OAAO,2BAAK+B,GAAZ,IAAmBhC,QAAS4G,EAAa5G,UAC3C,IXrB6B,oBWsB3B,OAAO,2BAAKgC,GAAZ,IAAmB6E,mBAAmB,2BAAM7E,EAAM6E,oBAAb,kBAAkCI,EAAOhE,QAAQhD,KAAOgH,EAAOhE,YACtG,QACE,OAAOjB,IE3BVgC,MDCI,WAAqD,IAA/BhC,EAA8B,uDAAtB4E,EAAcK,EAAQ,uCACzD,OAAQA,EAAOpI,MACb,IZLgC,uBYM9B,OAAO,2BAAKmD,GAAZ,IAAmB+B,YAAakD,EAAOhE,QAAQiE,QAASjD,kBAAmBgD,EAAOhE,QAAQiE,UAC5F,IZJ+B,sBYK7B,OAAO,2BAAKlF,GAAZ,IAAmByC,YAAawC,EAAOhE,UACzC,IZL0B,iBYMxB,OAAO,2BAAKjB,GAAZ,IAAmB+B,YAAa/B,EAAMiC,kBAAkBuD,QAAO,SAACxH,GAC9D,OAAOA,EAAQC,KAAKwH,SAASzF,EAAMyC,kBAEvC,QACE,OAAOzC,M,QETP0F,EAAQC,YAAYZ,EAAaa,YAAgBC,MACjDxF,EACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUqF,MAAOA,GACf,kBAAC,IAAMI,WAAP,KACE,kBAAC,EAAD,SAKRC,IAASC,OAAO3F,EAAK4F,SAASC,eAAe,SL8GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMC,c","file":"static/js/main.b7ee9b48.chunk.js","sourcesContent":["import React from 'react';\nimport { useTrail, animated, config } from 'react-spring';\nimport '../../sass/About.scss';\n\nfunction About() {\n  const contacts = [{\n    type: 'Email',\n    contact: 'Elistratovnik@yandex.ru'\n  },\n  {\n    type: 'Phone',\n    contact: '+7 (977) 718-14-23'\n  },\n  {\n    type: 'Vk',\n    contact: 'https://vk.com/id241193108'\n  }\n  ]\n  const contactTrail = useTrail(contacts.length, {\n    to: { opacity: 1, bottom: '0px' },\n    from: { opacity: 0, bottom: '-60px' },\n    config: config.molasses\n  })\n\n  return (\n    <section className=\"about\">\n      <h2 className=\"about__title\">Елистратов Никита</h2>\n      <p className=\"about__text\">В данной работе я использовал React, Redux,\n          React-spring(анимации) и  React-virtualized (библиотека для оптимизации больших таблиц)</p>\n      <p className=\"about__text\">Буду рад обратной связи!</p>\n      <div className=\"about__contacts\">\n        {\n          contactTrail.map((props, index) => (\n            <animated.div style={props} key={index} className=\"about__contact-container\">\n              <h3 className=\" about__contact-title\">{contacts[index].type}</h3>\n              <span className=\" about__contact-text\">{contacts[index].contact}</span>\n            </animated.div>\n          ))\n        }\n      </div>\n    </section >\n  );\n}\n\nexport default About;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../sass/Card.scss'\n\nfunction Card({ pokemon }) {\n  const { name, url } = pokemon;\n  const [img, setImage] = useState('')\n  const [id, setId] = useState(0)\n\n  useEffect(() => {\n      async function fetchData() {\n        const response = await fetch(url)\n        const json = await response.json()\n        setImage(json.sprites.front_default)\n        setId(json.id)\n      }\n      fetchData()\n  }, [url])\n\n  return (\n    <Link to={`/pokemons/${id}`} className=\"card\">\n      <div className=\"card__image\" style={{ backgroundImage: `url(${img})` }}></div>\n      <h3 className=\"card__title\">{name}</h3>\n    </Link>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSpring, animated, config } from 'react-spring';\nimport { hideGreetings } from '../../redux/actions';\nimport '../../sass/Welcome.scss';\n\nfunction Welcome({LoadNextCards}) {\n  const dispath = useDispatch()\n\n  const clicklHandler = () => {\n    dispath(hideGreetings())\n    LoadNextCards()\n  }\n\n  const welcomeTextEffect = useSpring({\n    from: {opacity: 0, transform: 'translateY(-100%)'},\n    to: {opacity: 1,  transform: 'translateY(0%)'},\n    config: config.wobbly\n  })\n\n  return (\n    <animated.div className=\"welcome\" style={welcomeTextEffect}>\n      <h1 className=\"welcome__title\">PokemonWorld</h1>\n      <p className=\"welcome__subtitle\">Добро пожаловать! Меня Зовут Елистратов Никита и этот сайт - тестовое задание для компании \"Blitz_Studio\"</p>\n      <p className=\"welcome__subtitle\">Для навигации изпользуйте \"покебол\" в верхнем-левом углу экрана</p>\n      <button className=\"welcome__button\" onClick={clicklHandler}>погнали</button>\n    </animated.div>\n  );\n}\n\nexport default Welcome;\n","import { CHANGE_CARD_OFFSET, CHANGE_SEARCH_VALUE, FETCHED_ALL_POKEMONS, FETCHED_CARDS, HIDE_GREETINGS, HIDE_LOADER, LOAD_POKEMON, RESET_CARDS, RESET_POKEMON, SAVE_POKEMON_DATA, SEARCH_POKEMON, SHOW_LOADER } from './types'\n\nexport function fetchedCards(limit, offset) {\n  return async (dispatch) => {\n    dispatch(showLoader())\n    try {\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`)\n      const json = await response.json()\n      dispatch({ type: FETCHED_CARDS, payload: json })\n    } catch (err) {\n      alert(`произошла ошибка загрузки: ${err}`)\n    } finally {\n      dispatch(hideLoader())\n    }\n    dispatch(hideLoader())\n  }\n}\n\nexport function fetchedAllPokemons() {\n  return async (dispatch) => {\n    dispatch(showLoader())\n    try {\n      const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=1050&offset=0`)\n      const json = await response.json()\n      dispatch({ type: FETCHED_ALL_POKEMONS, payload: json })\n    } catch (err) {\n      alert(`произошла ошибка загрузки: ${err}`)\n    } finally {\n      dispatch(hideLoader())\n    }\n  }\n}\n\nexport function loadPokemon(url) {\n  return async (dispatch) => {\n    dispatch(resetPokemon())\n    dispatch(showLoader())\n    const response = await fetch(url)\n    const json = await response.json()\n    dispatch({ type: LOAD_POKEMON, payload: json })\n    dispatch(hideLoader())\n  }\n}\n\nexport function changeCardOffset(num) {\n  return {\n    type: CHANGE_CARD_OFFSET,\n    payload: num\n  }\n}\n\nexport function showLoader() {\n  return {\n    type: SHOW_LOADER\n  }\n}\n\nexport function hideLoader() {\n  return {\n    type: HIDE_LOADER\n  }\n}\n\nexport function hideGreetings() {\n  return {\n    type: HIDE_GREETINGS\n  }\n}\n\nexport function resetCards() {\n  return {\n    type: RESET_CARDS\n  }\n}\n\nexport function changeSearchValue(value) {\n  return {\n    type: CHANGE_SEARCH_VALUE,\n    payload: value\n  }\n}\n\nexport function searchPokemon() {\n  return {\n    type: SEARCH_POKEMON\n  }\n}\n\nexport function resetPokemon() {\n  return {\n    type: RESET_POKEMON\n  }\n}\n\nexport function savePokemonData(pokemon) {\n  return {\n    type: SAVE_POKEMON_DATA,\n    payload: pokemon\n  }\n}\n\n\n","export const FETCHED_CARDS = 'FETCHED_CARDS'\nexport const CHANGE_CARD_OFFSET = 'CHANGE_CARD_OFFSET'\nexport const SHOW_LOADER = 'SHOW_LOADER'\nexport const HIDE_LOADER = 'HIDE_LOADER'\nexport const HIDE_GREETINGS = 'HIDE_GREETINGS'\nexport const RESET_CARDS = 'RESET_CARDS'\nexport const FETCHED_ALL_POKEMONS = 'FETCHED_ALL_POKEMONS'\nexport const LOAD_POKEMON = 'LOAD_POKEMON'\nexport const RESET_POKEMON = 'RESET_POKEMON'\nexport const CHANGE_SEARCH_VALUE = 'CHANGE_SEARCH_VALUE'\nexport const SEARCH_POKEMON = 'SEARCH_POKEMON'\nexport const SAVE_POKEMON_DATA = 'SAVE_POKEMON_DATA'\n\n","import React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from '../Card/Card';\nimport '../../sass/CardsList.scss'\nimport { fetchedCards, resetCards } from '../../redux/actions';\nimport Welcome from '../Welcome/Welcome';\n\nfunction CardsList() {\n  const dispatch = useDispatch();\n  const cardsRef = useRef();\n  const offsetRef = useRef(0);\n  const { pokemons, loading, greetingsOpen, pokemonAddCount } = useSelector((state) => {\n    return {\n      pokemons: state.cards.pokemons,\n      loading: state.cards.loading,\n      greetingsOpen: state.app.greetingsOpen,\n      pokemonAddCount: state.cards.pokemonAddCount\n    }\n  })\n\n  useEffect(() => {\n    if (cardsRef.current.getBoundingClientRect().height < window.innerHeight && !greetingsOpen) {\n      LoadNextCards()\n    }\n  }, [pokemons, greetingsOpen])\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll)\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n      dispatch(resetCards())\n    }\n  }, [])\n\n  const LoadNextCards = () => {\n    dispatch(fetchedCards(pokemonAddCount, offsetRef.current))\n    offsetRef.current = offsetRef.current + pokemonAddCount\n  }\n\n  const handleScroll = () => {\n    const { height, top } = cardsRef.current.getBoundingClientRect()\n    if (Math.round(height) === window.innerHeight - top - 48) {\n      LoadNextCards()\n    }\n  }\n\n  return (\n    <section ref={cardsRef} className=\"cards\">\n      {greetingsOpen && <Welcome LoadNextCards={LoadNextCards} />}\n      {\n        pokemons.map((pokemon, index) => (\n          <Card key={index} pokemon={pokemon} />\n        ))\n      }\n    </section>\n  );\n}\n\nexport default CardsList;\n","import React, { useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadPokemon } from '../../redux/actions';\nimport '../../sass/Pokemon.scss'\n\nfunction Pokemon(props) {\n  const dispatch = useDispatch()\n  const pokemon = useSelector((state) => {\n    return state.cards.pokemon\n  })\n\n  useEffect(() => {\n    dispatch(loadPokemon(`https://pokeapi.co/api/v2/pokemon/${props.match.params.id}`))\n  }, [props.match.params.id, dispatch])\n\n  return (\n    <article className=\"pokemon\">\n      <img src={pokemon.image} alt=\"pokemon avatar\" className=\"pokemon__image\" ></img>\n      <ul className=\"pokemon__description\">\n        <li className=\"pokemon__char\">{`Имя: ${pokemon.name}`}</li>\n        <li className=\"pokemon__char\">{`Вес: ${pokemon.weight} кг`}</li>\n        <li className=\"pokemon__char\">{`Рост: ${pokemon.height} дюймов`}</li>\n        <li className=\"pokemon__char\">{`Тип: ${pokemon.type}`}</li>\n      </ul>\n    </article>\n  );\n}\n\nexport default Pokemon;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AutoSizer, List } from 'react-virtualized';\nimport { fetchedAllPokemons } from '../../redux/actions';\n\nfunction Table() {\n  const dispath = useDispatch();\n  const {allPokemons, allPokemonsBackup} = useSelector((state) => {\n    return {\n      allPokemons: state.table.allPokemons,\n      allPokemonsBackup: state.table.allPokemonsBackup\n    }\n  })\n\n  useEffect(() => {\n    if (!allPokemonsBackup.length) {\n      dispath(fetchedAllPokemons())\n    }\n  }, [dispath])\n\n  return (\n    <div className=\"table\" style={{ width: '100%', height: '70vh' }}>\n      <AutoSizer >\n        {({width, height}) =>\n          <List width={width} height={height} rowHeight={50} rowCount={allPokemons.length} rowRenderer={({ key, index, parent, style }) => {\n            const pokemon = allPokemons[index]\n            return <Link to={`/pokemons/${pokemon.name}`} className=\"table__row\" key={key} style={style}>{`${index + 1}. ${pokemon.name}`}</Link>\n          }} />\n        }\n      </AutoSizer>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport Table from '../Table/Table';\nimport '../../sass/Table.scss'\nimport '../../sass/PokemonsTable.scss'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeSearchValue, searchPokemon } from '../../redux/actions';\n\nfunction PokemonsTable() {\n  const dispatch = useDispatch()\n  const value = useSelector((state) => {\n    return state.table.searchInput\n  })\n\n  const searchHandler = (e) => {\n    dispatch(changeSearchValue(e.currentTarget.value))\n  }\n\n  const searchButtonHandler = () => {\n    dispatch(searchPokemon())\n  }\n\n  return (\n    <section className=\"pokemons-table\">\n        <input className=\"pokemons-table__search\" type='text' value={value} onChange={searchHandler}></input>\n        <button className=\"pokemons-table__button\" onClick={searchButtonHandler}>искать</button>\n        <Table/>\n    </section>\n  );\n}\n\nexport default PokemonsTable;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport About from '../About/About';\nimport CardsList from '../CardsList/CardsList';\nimport Pokemon from '../Pokemon/Pokemon';\nimport PokemonsTable from '../PokemonsTable/PokemonsTable';\n\nfunction Main() {\n  return (\n    <main className=\"main\">\n      <Switch>\n        <Route exact path='/' component={CardsList}/>\n        <Route exact path='/pokemons' component={PokemonsTable}/>\n        <Route path='/about' component={About}/>\n        <Route path='/pokemons/:id' component={Pokemon}/>\n      </Switch>\n    </main>\n  );\n}\n\nexport default Main;\n","import React, { useRef, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSpring, animated, useChain, useTransition } from 'react-spring';\nimport '../../sass/Menu.scss'\n\nfunction Menu() {\n  const [open, setOpen] = useState(false)\n  const mobile = window.innerWidth < 1024 ? '100%' : '40%'\n\n  const menuItems = [\n    { title: 'Главная', path: '/', id: '0' },\n    { title: 'Покемоны', path: '/pokemons', id: '1' },\n    { title: 'Автор', path: '/about', id: '2' },\n  ]\n\n  const MenuRotateRef = useRef();\n  const menuRotate = useSpring({\n    ref: MenuRotateRef,\n    transform: open ? 'rotate(0deg)' : 'rotate(90deg)',\n    from: { transform: 'rotate(-90deg)' },\n    config: { duration: 100 }\n  })\n\n  const MenuOpenRef = useRef();\n  const menuOpen = useSpring({\n    ref: MenuOpenRef,\n    width: open ? mobile : '0%',\n  })\n\n  const showMenuItemsRef = useRef();\n  const showMenuItems = useTransition(open ? menuItems : [], item => item.title, {\n    ref: showMenuItemsRef,\n    unique: true,\n    from: { opacity: 0, transform: 'scale(0)' },\n    enter: [{ opacity: 0, transform: 'scale(1)' }, { opacity: 1, transform: 'scale(1)' }],\n    leave: { opacity: 0, transform: 'scale(0)' },\n    config: { duration: 300 }\n  })\n\n  useChain(open ? [MenuRotateRef, MenuOpenRef, showMenuItemsRef] : [showMenuItemsRef, MenuRotateRef, MenuOpenRef], [0, open ? 0.1 : 0.3])\n\n  return (\n    <animated.div style={{ ...menuRotate, ...menuOpen }} className=\"menu\" onMouseEnter={() => { setOpen(true) }} onMouseLeave={() => { setOpen(false) }}>\n      {\n        showMenuItems.map(({ item, props }) => {\n          return <animated.div style={props} key={item.id}><NavLink className=\"menu__link\" to={item.path} style={props}>{item.title}</NavLink></animated.div>\n        })\n      }\n    </animated.div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport '../../sass/Spinner.scss'\n\nfunction Spinner() {\n  return (\n    <div className=\"spinner\">\n\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.scss';\nimport Main from './components/Main/Main';\nimport Menu from './components/Menu/Menu';\nimport Spinner from './components/Spinner/Spinner';\n\nfunction App() {\n  const loading = useSelector(state => state.app.loading)\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Main />\n      {loading && <Spinner />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { HIDE_GREETINGS, HIDE_LOADER, SHOW_LOADER } from \"../types\";\n\nconst initialState = {\n  greetingsOpen: true,\n  loading: false,\n}\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case HIDE_GREETINGS:\n      return { ...state, greetingsOpen: false }\n    case SHOW_LOADER:\n      return { ...state, loading: true }\n    case HIDE_LOADER:\n      return { ...state, loading: false }\n    default:\n      return state;\n  }\n}\n","import { FETCHED_CARDS, LOAD_POKEMON, RESET_CARDS, RESET_POKEMON, SAVE_POKEMON_DATA, SAVE_POKEMON_NAME, } from \"../types\";\n\nconst initialState = {\n  pokemons: [],\n  loadedPokemonCards: {},\n  cardsCount: 0,\n  pokemonAddCount: 5,\n  pokemon: {\n    image: 'https://www.clipartmax.com/png/full/190-1908912_free-png-pokeball-png-images-transparent-pokeball-png-hd.png',\n    name: '',\n    weight: 0,\n    height: 0,\n    type: ''\n  },\n}\n\nexport function cardsReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCHED_CARDS:\n      return { ...state, pokemons: [...state.pokemons, ...action.payload.results], cardsCount: action.payload.count }\n    case RESET_CARDS:\n      return { ...state, pokemons: [] }\n    case LOAD_POKEMON:\n      console.log(action.payload)\n      return { ...state, pokemon: {\n        image: action.payload.sprites.other[\"official-artwork\"].front_default,\n        name: action.payload.name,\n        weight: action.payload.weight,\n        height: action.payload.height,\n        type: action.payload.types[0].type.name } }\n    case RESET_POKEMON:\n      return { ...state, pokemon: initialState.pokemon }\n    case SAVE_POKEMON_DATA:\n      return { ...state, loadedPokemonCards: { ...state.loadedPokemonCards, [action.payload.name]: action.payload } }\n    default:\n      return state;\n  }\n}\n","import { CHANGE_SEARCH_VALUE, FETCHED_ALL_POKEMONS, SEARCH_POKEMON } from \"../types\";\n\n\nconst initialState = {\n  allPokemons: [],\n  allPokemonsBackup: [],\n  searchInput: ''\n}\n\nexport function tableReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCHED_ALL_POKEMONS:\n      return { ...state, allPokemons: action.payload.results, allPokemonsBackup: action.payload.results}\n    case CHANGE_SEARCH_VALUE:\n      return { ...state, searchInput: action.payload }\n    case SEARCH_POKEMON:\n      return { ...state, allPokemons: state.allPokemonsBackup.filter((pokemon) => {\n        return pokemon.name.includes(state.searchInput)\n      })}\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { appReducer } from \"./reducers/appReducer\";\nimport { cardsReducer } from \"./reducers/cardsReducer\";\nimport { tableReducer } from \"./reducers/tableReducer\";\n\nexport const rootReducer = combineReducers({\n   app: appReducer,\n   cards: cardsReducer,\n   table: tableReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { rootReducer } from './redux/rootReducer';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\nconst app =\n  <BrowserRouter >\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </BrowserRouter>\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}